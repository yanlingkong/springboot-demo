package ${package}.modules.${module}.controller;

import java.util.Map;

import java.util.Map;

import com.example.demo.modules.generator.entity.Page;
import com.example.demo.modules.generator.entity.ResponseEntity;
import com.example.demo.modules.users.entity.UserEntity;
import com.example.demo.modules.users.service.UserService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * ${comments}
 * @author ${author}
 * @email  ${email}
 * @date  ${datetime}
 */
@RestController
@RequestMapping("/${requestMapping}")
@Api(description = "${comments}")
@Slf4j
public class ${className}Controller{
	
	@Autowired
	private ${className}Service ${objName}Service;
	
	/**
	 * 列表
	 * @param params
	 * @return
	 */
    @ApiOperation(value = "列表", notes = "列表",
             produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@PostMapping("/list")
	public Page<${className}Entity> list(@RequestBody Map<String, Object> params) {
		return ${objName}Service.list${className}(params);
	}
		
	/**
	 * 新增
	 * @param ${objName}
	 * @return
	 */
    @ApiOperation(value = "新增", notes = "新增",
            produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@PostMapping("/save")
	public ResponseEntity save(@RequestBody ${className}Entity ${objName}) {
		return ${objName}Service.save${className}(${objName});
	}
	
	/**
	 * 根据id查询详情
	 * @param id
	 * @return
	 */
    @ApiOperation(value = "根据id查询详情", notes = "根据id查询详情",
           produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@PostMapping("/info")
	public ResponseEntity getById(@RequestBody Long id) {
		return ${objName}Service.get${className}ById(id);
	}
	
	/**
	 * 修改
	 * @param ${objName}
	 * @return
	 */
    @ApiOperation(value = "修改", notes = "修改",
              produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@PostMapping("/update")
	public ResponseEntity update(@RequestBody ${className}Entity ${objName}) {
		return ${objName}Service.update${className}(${objName});
	}
	
	/**
	 * 删除
	 * @param id
	 * @return
	 */
    @ApiOperation(value = "删除", notes = "删除",
             produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@PostMapping("/remove")
	public ResponseEntity batchRemove(@RequestBody Long[] id) {
		return ${objName}Service.batchRemove(id);
	}
	
}
